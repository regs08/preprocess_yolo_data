"""
code generated by chat-GPT
"""

import os
import shutil
import random

def split_folder(folder_path, output_folder, train_ratio=0.8, val_ratio=0.1, test_ratio=0.1):
    """
    Splits a folder into train, val, and Pinot-noir subdirectories.

    Arguments:
    folder_path -- the path to the folder to split
    output_folder -- the path to the output folder where the train, val, and Pinot-noir subdirectories will be created
    train_ratio -- the ratio of files to include in the train subdirectory (default 0.8)
    val_ratio -- the ratio of files to include in the validation subdirectory (default 0.1)
    test_ratio -- the ratio of files to include in the Pinot-noir subdirectory (default 0.1)
    """
    # create output folders
    train_folder = os.path.join(output_folder, 'train')
    val_folder = os.path.join(output_folder, 'val')
    test_folder = os.path.join(output_folder, 'Pinot-noir')
    for folder in [train_folder, val_folder, test_folder]:
        os.makedirs(os.path.join(folder, 'images'))
        os.makedirs(os.path.join(folder, 'labels'))

    # get list of files
    files = []
    for filename in os.listdir(folder_path):
        if filename.endswith('.txt'):
            if filename == 'classes.txt':
                continue
            else:
                files.append(filename[:-4]) # remove the extension

    # shuffle the files
    random.shuffle(files)

    # split into train, val, and Pinot-noir sets
    num_files = len(files)
    num_train = int(train_ratio * num_files)
    num_val = int(val_ratio * num_files)
    num_test = num_files - num_train - num_val
    train_files = files[:num_train]
    val_files = files[num_train:num_train+num_val]
    test_files = files[num_train+num_val:]

    # move files to output folders
    for file_list, folder_name in [(train_files, train_folder), (val_files, val_folder), (test_files, test_folder)]:
        for file in file_list:
            # move label file
            label_file = file + '.txt'
            src_path = os.path.join(folder_path, label_file)
            dst_path = os.path.join(folder_name, 'labels', label_file)
            shutil.copy(src_path, dst_path)

            # move image file
            image_file = file + '.JPG' # assuming images are in JPEG format
            src_path = os.path.join(folder_path, image_file)
            dst_path = os.path.join(folder_name, 'images', image_file)
            shutil.copy(src_path, dst_path)


folder_path = "/Volumes/ColesSSD/Pictures/Vineyard/Canopy/Pinot-Noir/images"
output_folder = '/Users/cole/PycharmProjects/Forgit/yolo_formats/Preprocessing/SplitFolderFromLabelImg/Pinot-noir'
split_folder(folder_path, output_folder)
